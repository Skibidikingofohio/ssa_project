Internal Server Error: /users/top-up/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 90, in top_up
    return render(request, 'users/topup.html', {'form': form, 'balance': Profile.balance})
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\shortcuts.py", line 25, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\template\loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: users/topup.html
"GET /users/top-up/ HTTP/1.1" 500 80719
Internal Server Error: /users/top-up/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 90, in top_up
    return render(request, 'users/topup.html', {'form': form, 'balance': Profile.balance})
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\shortcuts.py", line 25, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\template\loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: users/topup.html
"GET /users/top-up/ HTTP/1.1" 500 80786
Internal Server Error: /chipin/group/5/event/8/transfer_funds/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\chipin\views.py", line 39, in transfer_funds
    if insufficient_funds == True:
       ^^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'insufficient_funds' where it is not associated with a value
"GET /chipin/group/5/event/8/transfer_funds/ HTTP/1.1" 500 65770
Internal Server Error: /chipin/group/5/event/8/transfer_funds/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\chipin\views.py", line 39, in transfer_funds
    if insufficient_funds > 0:
       ^^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'insufficient_funds' where it is not associated with a value
"GET /chipin/group/5/event/8/transfer_funds/ HTTP/1.1" 500 66168
Internal Server Error: /chipin/group/5/event/8/transfer_funds/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\chipin\views.py", line 39, in transfer_funds
    if insufficient_funds > 0:
       ^^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'insufficient_funds' where it is not associated with a value
"GET /chipin/group/5/event/8/transfer_funds/ HTTP/1.1" 500 65768
Internal Server Error: /chipin/group/5/event/8/transfer_funds/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\chipin\views.py", line 39, in transfer_funds
    if insufficient_funds > 0:
       ^^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'insufficient_funds' where it is not associated with a value
"GET /chipin/group/5/event/8/transfer_funds/ HTTP/1.1" 500 66031
Internal Server Error: /chipin/group/5/event/8/transfer_funds/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\chipin\views.py", line 39, in transfer_funds
    if insufficient_funds > 0:
       ^^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'insufficient_funds' where it is not associated with a value
"GET /chipin/group/5/event/8/transfer_funds/ HTTP/1.1" 500 66325
Internal Server Error: /admin/auth/user/add/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\options.py", line 718, in wrapper
    return self.admin_site.admin_view(view)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 188, in _view_wrapper
    result = _process_exception(request, e)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 186, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\cache.py", line 80, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\sites.py", line 241, in inner
    return view(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\debug.py", line 143, in sensitive_post_parameters_wrapper
    return view(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 188, in _view_wrapper
    result = _process_exception(request, e)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 186, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\admin.py", line 121, in add_view
    return self._add_view(request, form_url, extra_context)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\admin.py", line 149, in _add_view
    return super().add_view(request, form_url, extra_context)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\options.py", line 1961, in add_view
    return self.changeform_view(request, None, form_url, extra_context)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 188, in _view_wrapper
    result = _process_exception(request, e)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 186, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\options.py", line 1820, in changeform_view
    return self._changeform_view(request, object_id, form_url, extra_context)
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\options.py", line 1871, in _changeform_view
    self.save_model(request, new_object, form, not add)
    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\options.py", line 1294, in save_model
    obj.save()
    ~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 39, in save
    self.clean()
    ~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 36, in clean
    validate_unique_nickname(self.nickname, instance=self)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 21, in validate_unique_nickname
    raise ValidationError(f"Nickname '{nickname}' is already taken.")
django.core.exceptions.ValidationError: ["Nickname '' is already taken."]
"POST /admin/auth/user/add/ HTTP/1.1" 500 219215
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 24, in save
    user.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 39, in save
    self.clean()
    ~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 36, in clean
    validate_unique_nickname(self.nickname, instance=self)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 21, in validate_unique_nickname
    raise ValidationError(f"Nickname '{nickname}' is already taken.")
django.core.exceptions.ValidationError: ["Nickname '' is already taken."]
"POST /users/register/ HTTP/1.1" 500 129332
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 24, in save
    user.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 39, in save
    self.clean()
    ~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 36, in clean
    validate_unique_nickname(self.nickname, instance=self)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 21, in validate_unique_nickname
    raise ValidationError(f"Nickname '{nickname}' is already taken.")
django.core.exceptions.ValidationError: ["Nickname '' is already taken."]
"POST /users/register/ HTTP/1.1" 500 129407
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 24, in save
    user.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 39, in save
    self.clean()
    ~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 36, in clean
    validate_unique_nickname(self.nickname, instance=self)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 21, in validate_unique_nickname
    raise ValidationError(f"Nickname '{nickname}' is already taken.")
django.core.exceptions.ValidationError: ["Nickname '' is already taken."]
"POST /users/register/ HTTP/1.1" 500 129327
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 24, in save
    user.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 39, in save
    self.clean()
    ~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 36, in clean
    validate_unique_nickname(self.nickname, instance=self)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 21, in validate_unique_nickname
    raise ValidationError(f"Nickname '{nickname}' is already taken.")
django.core.exceptions.ValidationError: ["Nickname '' is already taken."]
"POST /users/register/ HTTP/1.1" 500 145
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 24, in save
    user.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 39, in save
    self.clean()
    ~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 36, in clean
    validate_unique_nickname(self.nickname, instance=self)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 21, in validate_unique_nickname
    raise ValidationError(f"Nickname '{nickname}' is already taken.")
django.core.exceptions.ValidationError: ["Nickname '' is already taken."]
"POST /users/register/ HTTP/1.1" 500 129050
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 24, in save
    user.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 55, in save
    self.full_clean()  # Ensures clean() is called before saving
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1650, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'nickname': ['This field cannot be blank.'], '__all__': ['Nickname cannot be null or empty.']}
"POST /users/register/ HTTP/1.1" 500 126047
Internal Server Error: /admin/login/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\cache.py", line 80, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\sites.py", line 444, in login
    return LoginView.as_view(**defaults)(request)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\debug.py", line 143, in sensitive_post_parameters_wrapper
    return view(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 188, in _view_wrapper
    result = _process_exception(request, e)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 186, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\cache.py", line 80, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\views.py", line 89, in dispatch
    return super().dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\base.py", line 143, in dispatch
    return handler(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\edit.py", line 151, in post
    return self.form_valid(form)
           ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\views.py", line 108, in form_valid
    auth_login(self.request, form.get_user())
    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\__init__.py", line 152, in login
    user_logged_in.send(sender=user.__class__, request=request, user=user)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\models.py", line 24, in update_last_login
    user.save(update_fields=["last_login"])
    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 15, in save_user_profile
    instance.profile.save()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 57, in save
    self.full_clean()  # Ensures clean() is called before saving
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1650, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'nickname': ['Nickname cannot be null or empty.']}
"POST /admin/login/?next=/admin/ HTTP/1.1" 500 189907
Internal Server Error: /admin/login/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\cache.py", line 80, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\sites.py", line 444, in login
    return LoginView.as_view(**defaults)(request)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\debug.py", line 143, in sensitive_post_parameters_wrapper
    return view(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 188, in _view_wrapper
    result = _process_exception(request, e)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 186, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\cache.py", line 80, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\views.py", line 89, in dispatch
    return super().dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\base.py", line 143, in dispatch
    return handler(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\edit.py", line 151, in post
    return self.form_valid(form)
           ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\views.py", line 108, in form_valid
    auth_login(self.request, form.get_user())
    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\__init__.py", line 152, in login
    user_logged_in.send(sender=user.__class__, request=request, user=user)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\models.py", line 24, in update_last_login
    user.save(update_fields=["last_login"])
    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 15, in save_user_profile
    instance.profile.save()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 57, in save
    self.full_clean()  # Ensures clean() is called before saving
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1650, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'nickname': ['Nickname cannot be null or empty.']}
"POST /admin/login/?next=/admin/ HTTP/1.1" 500 189907
Internal Server Error: /admin/login/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\cache.py", line 80, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\admin\sites.py", line 444, in login
    return LoginView.as_view(**defaults)(request)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\debug.py", line 143, in sensitive_post_parameters_wrapper
    return view(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 188, in _view_wrapper
    result = _process_exception(request, e)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 186, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\utils\decorators.py", line 48, in _wrapper
    return bound_method(*args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\decorators\cache.py", line 80, in _view_wrapper
    response = view_func(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\views.py", line 89, in dispatch
    return super().dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\base.py", line 143, in dispatch
    return handler(request, *args, **kwargs)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\views\generic\edit.py", line 151, in post
    return self.form_valid(form)
           ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\views.py", line 108, in form_valid
    auth_login(self.request, form.get_user())
    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\__init__.py", line 152, in login
    user_logged_in.send(sender=user.__class__, request=request, user=user)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\models.py", line 24, in update_last_login
    user.save(update_fields=["last_login"])
    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 15, in save_user_profile
    instance.profile.save()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 57, in save
    self.full_clean()  # Ensures clean() is called before saving
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1650, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'nickname': ['Nickname cannot be null or empty.']}
"POST /admin/login/?next=/admin/ HTTP/1.1" 500 189907
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 26, in save
    user.save()  # Save the user instance
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 57, in save
    self.full_clean()  # Ensures clean() is called before saving
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1650, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'nickname': ['Nickname cannot be null or empty.']}
"POST /users/register/ HTTP/1.1" 500 125794
Internal Server Error: /users/register/
Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
users.models.Profile.DoesNotExist: Profile matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\krato\ssa_project\users\views.py", line 16, in register
    form.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\forms.py", line 24, in save
    user.save()
    ~~~~~~~~~^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 891, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1012, in save_base
    post_save.send(
    ~~~~~~~~~~~~~~^
        sender=origin,
        ^^^^^^^^^^^^^^
    ...<4 lines>...
        using=using,
        ^^^^^^^^^^^^
    )
    ^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\dispatch\dispatcher.py", line 189, in send
    response = receiver(signal=self, sender=sender, **named)
  File "C:\Users\krato\ssa_project\users\models.py", line 10, in create_user_profile
    Profile.objects.get_or_create(user=instance)  # Safely create the profile without duplicating
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\krato\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 39, in save
    self.clean()
    ~~~~~~~~~~^^
  File "C:\Users\krato\ssa_project\users\models.py", line 36, in clean
    validate_unique_nickname(self.nickname, instance=self)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\krato\ssa_project\users\models.py", line 21, in validate_unique_nickname
    raise ValidationError(f"Nickname '{nickname}' is already taken.")
django.core.exceptions.ValidationError: ["Nickname '' is already taken."]
"POST /users/register/ HTTP/1.1" 500 128904
